plugins {
    id "io.spring.dependency-management" version "1.0.8.RELEASE"
    id 'java'
}

allprojects {

    group = 'com.carrotlicious.iot-slackbot-service'
    version = '0.0.1'
    sourceCompatibility = '1.8'


    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java-library'
    apply plugin: 'idea'
    apply plugin: 'checkstyle'
    apply plugin: 'jacoco'
    //apply plugin: 'pmd'

    repositories {
        mavenCentral()
    }

    dependencyManagement {
        imports {
            mavenBom("org.springframework.boot:spring-boot-dependencies:2.1.6.RELEASE")
        }
    }

    checkstyle {
        toolVersion = '8.21'

        def googleChecks = resources.text.fromArchiveEntry(configurations.checkstyle[0], 'google_checks.xml').asString()
        config = resources.text.fromString(googleChecks)

        maxErrors = 0
        maxWarnings = 0
    }



    jacoco {
        toolVersion = "0.8.4"
        reportsDir = file("$buildDir/reports/jacoco")
    }

    jacocoTestReport.dependsOn test
    jacocoTestReport {
        afterEvaluate {
            classDirectories.setFrom(files(classDirectories.files.collect {
                fileTree(dir: it, exclude: ['com/carrotlicious/iot/slackbot/domain/**'
                , 'com/carrotlicious/iot/slackbot/*/dto/**', 'com/carrotlicious/iot/slackbot/application/port/in/command/**'])
            }))
        }
        reports {
            xml.enabled false
            csv.enabled false
            html.destination file("${buildDir}/reports/jacoco")
        }
    }

    check.dependsOn jacocoTestCoverageVerification
    jacocoTestCoverageVerification {
        violationRules {
           rule {
                enabled = true
                element = 'CLASS'
                excludes = ['com.carrotlicious.iot.slackbot.domain.*',
                            'com.carrotlicious.iot.slackbot.*.dto.*',
                            'com.carrotlicious.iot.slackbot.application.port.in.command.*']

                limit {
                    minimum = 0.8
                }
            }
        }
    }


}
